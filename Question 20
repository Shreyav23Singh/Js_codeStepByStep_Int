let x=[..."Hardwork "]
    console.log(x)
    
Output
node /tmp/O2x4Borskj.js
[
  'H', 'a', 'r',
  'd', 'w', 'o',
  'r', 'k', ' '
]
 creates an array x by spreading the characters of the string "Hardwork " using the spread syntax (...). Each character of the string 
 is treated as an individual element, and the resulting array will contain the characters of the string as its elements.
 
 The spread operator (`...`) in JavaScript is a powerful feature that allows you to expand or "spread" the elements of an iterable 
 (such as an array, string, or object) into various contexts, like function arguments, array literals, or object literals.

Here are a few common use cases of the spread operator:

1. **Array spreading**: You can use the spread operator to create a new array by combining existing arrays or adding elements to an existing 
array.

   ```javascript
   const arr1 = [1, 2, 3];
   const arr2 = [4, 5, 6];
   const combinedArray = [...arr1, ...arr2];
   console.log(combinedArray); // Output: [1, 2, 3, 4, 5, 6]
   ```
   
   Multiply two numbers
   function mulNums(a , b , c){
    return a*b*c;
}
const numbers=[45,23,63];
const muliply = mulNums(...numbers);
console.log(muliply) //Output :65205

2. **Function arguments**: The spread operator can be used to pass an array as individual arguments to a function.

   ```javascript
   function addNumbers(a, b, c) {
     return a + b + c;
   }

   const numbers = [1, 2, 3];
   const sum = addNumbers(...numbers);
   console.log(sum); // Output: 6
   ```

3. **Copying arrays or objects**: The spread operator can be used to create a shallow copy of an array or merge objects.

   ```javascript
   const originalArray = [1, 2, 3];
   const copiedArray = [...originalArray];
   console.log(copiedArray); // Output: [1, 2, 3]

   const originalObject = { a: 1, b: 2 };
   const copiedObject = { ...originalObject };
   console.log(copiedObject); // Output: { a: 1, b: 2 }
   ```

4. **String spreading**: As shown in your example, the spread operator can be used to convert a string into an array of characters.

   ```javascript
   const str = "Hello";
   const characters = [...str];
   console.log(characters); // Output: ['H', 'e', 'l', 'l', 'o']
   ```

The spread operator is a versatile tool that provides a concise and flexible way to work with arrays, objects, and other iterables in JavaScript.
